import Cookies from 'js-cookie'
import { authApi, type User } from './api'

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export function isAuthenticated(): boolean {
  const token = Cookies.get('access_token')
  console.log('üîç isAuthenticated check:', { token: token ? 'EXISTS' : 'MISSING', tokenLength: token?.length })
  return !!token
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export function saveAuthToken(token: string): void {
  console.log('üíæ Saving auth token:', { tokenLength: token.length, token: token.substring(0, 20) + '...' })
  
  Cookies.set('access_token', token, { 
    expires: 7, // 7 –¥–Ω–µ–π
    secure: process.env.NODE_ENV === 'production',
    sameSite: 'strict'
  })
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const savedToken = Cookies.get('access_token')
  console.log('‚úÖ Token saved verification:', { 
    saved: savedToken ? 'YES' : 'NO', 
    matches: savedToken === token,
    environment: process.env.NODE_ENV
  })
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export function removeAuthToken(): void {
  Cookies.remove('access_token')
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export function getAuthToken(): string | undefined {
  return Cookies.get('access_token')
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
export async function logout(): Promise<void> {
  try {
    await authApi.logout()
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error)
  } finally {
    removeAuthToken()
    window.location.href = '/'
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export function handleAuthCallback(): string | null {
  if (typeof window === 'undefined') return null
  
  const urlParams = new URLSearchParams(window.location.search)
  const authToken = urlParams.get('auth_token')
  
  if (authToken) {
    // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ URL
    const newUrl = window.location.pathname
    window.history.replaceState({}, '', newUrl)
    return authToken
  }
  
  return null
}

// –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
export async function startTelegramAuth(loanData?: {
  loan_amount?: number;
  loan_term?: number;
  loan_purpose?: string;
  monthly_income?: number;
}): Promise<void> {
  try {
    const { telegram_url } = await authApi.createAuthToken(loanData)
    window.location.href = telegram_url
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é')
  }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —Ç–æ–∫–µ–Ω–æ–º
export async function completeAuth(authToken: string): Promise<User> {
  try {
    console.log('üöÄ Starting completeAuth with authToken:', authToken.substring(0, 20) + '...')
    
    const response = await authApi.checkAuthStatus(authToken)
    console.log('üì• API response:', { 
      hasAccessToken: !!response.access_token,
      accessTokenLength: response.access_token?.length,
      hasUser: !!response.user
    })
    
    saveAuthToken(response.access_token)
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const isNowAuthenticated = isAuthenticated()
    console.log('üéØ Auth status after save:', { isNowAuthenticated })
    
    return response.user
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é')
  }
} 